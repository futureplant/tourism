north_arrow <- "<img src='http://pluspng.com/img-png/free-png-north-arrow-big-image-png-1659.png' style='width:30px;height:40px;'>"
m <- leaflet(options = leafletOptions(zoomControl = F)) %>%
setView(lng = 4.895168, lat = 52.370216, zoom = 11) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
#flickr
addCircleMarkers(group = "Flickr",data = flickr_geojson,radius = 4,stroke=F,fillOpacity = 0.7,color = ~pal_flickr(traveler_type),
popup = paste("<b>Photo title:</b>", flickr_geojson$photo_title, "<br>",
"<b>Date taken:</b>", flickr_geojson$date_taken, "<br>",
"<b>User origin:</b>", flickr_geojson$user_location))%>%
#twitter
addCircleMarkers(group = "Twitter",data = twitter_geojson,radius = 4,stroke=F,fillOpacity = 0.7,color = ~pal_twitter(hashtag),
popup = paste("<b>Neighbourhood:</b>", twitter_geojson$neighbourh, "<br>",
"<b>Tweet date:</b>", twitter_geojson$created, "<br>",
"<b>Text:</b>", twitter_geojson$text,
"<b>Traveler type:</b>", twitter_geojson$Descriptio))%>%
addLegend(group = "Flickr",data =flickr_geojson ,"topleft", pal = pal_flickr, values = ~traveler_type,title = "Traveler type")%>%
addLegend(group = "Twitter",data =twitter_geojson ,"topleft", pal = pal_twitter, values = ~hashtag,title = "Twitter hashtag")%>%
addMiniMap(position = "bottomright",toggleDisplay = T,minimized = T)%>%
addControl(html = north_arrow , position = "topright")%>%
addScaleBar(position = 'bottomleft',options = scaleBarOptions(imperial = F))%>%
addLayersControl(overlayGroups = c("Flickr", "Twitter"),options = layersControlOptions(collapsed = FALSE))%>%
hideGroup("Twitter")
return(m)
}
m <- FlickrTwitter(flickr_geojson,twitter_geojson)
#function to create Flickr and Twitter Lealet
library('leaflet')
FlickrTwitter <- function(flickr_geojson,twitter_geojson){
pal_flickr <- colorFactor(palette = 'viridis', domain = flickr_geojson$traveler_type)
pal_twitter <- colorFactor(palette = rainbow(length(unique(twitter_geojson$hashtag))),
domain = twitter_geojson$hashtag)
north_arrow <- "<img src='http://pluspng.com/img-png/free-png-north-arrow-big-image-png-1659.png' style='width:30px;height:40px;'>"
m <- leaflet(options = leafletOptions(zoomControl = F)) %>%
setView(lng = 4.895168, lat = 52.370216, zoom = 11) %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
#flickr
addCircleMarkers(group = "Flickr",data = flickr_geojson,radius = 4,stroke=F,fillOpacity = 0.7,color = ~pal_flickr(traveler_type),
popup = paste("<b>Photo title:</b>", flickr_geojson$photo_title, "<br>",
"<b>Date taken:</b>", flickr_geojson$date_taken, "<br>",
"<b>User origin:</b>", flickr_geojson$user_location))%>%
#twitter
addCircleMarkers(group = "Twitter",data = twitter_geojson,radius = 4,stroke=F,fillOpacity = 0.7,color = ~pal_twitter(hashtag),
popup = paste("<b>Neighbourhood:</b>", twitter_geojson$neighbourh, "<br>",
"<b>Tweet date:</b>", twitter_geojson$created, "<br>",
"<b>Text:</b>", twitter_geojson$text,
"<b>Traveler type:</b>", twitter_geojson$Descriptio))%>%
addLegend(group = "Flickr",data =flickr_geojson ,"topleft", pal = pal_flickr, values = ~traveler_type,title = "Traveler type")%>%
addLegend(group = "Twitter",data =twitter_geojson ,"topleft", pal = pal_twitter, values = ~hashtag,title = "Twitter hashtag")%>%
addMiniMap(position = "bottomright",toggleDisplay = T,minimized = T)%>%
addControl(html = north_arrow , position = "topright")%>%
addScaleBar(position = 'bottomleft',options = scaleBarOptions(imperial = F))%>%
addLayersControl(overlayGroups = c("Flickr", "Twitter"),options = layersControlOptions(collapsed = FALSE))%>%
hideGroup("Twitter")
return(m)
}
m <- FlickrTwitter(flickr_geojson,twitter_geojson)
m
unique(twitter_geojson$hashtag)
sum(unique(twitter_geojson$hashtag))
length(unique(twitter_geojson$hashtag))
list(length(unique(twitter_geojson$hashtag)))
list(length(unique(twitter_geojson$hashtag)))
length(unique(twitter_geojson$hashtag))
unique(twitter_geojson$hashtag)
for i in unique(twitter_geojson$hashtag){
print(i)
}
for (i in unique(twitter_geojson$hashtag)){
print(i)
}
# based on variable values
newdata <- twitter_geojson[ which(twitter_geojson$hashtag=='amsterdam' & twitter_geojson$Descriptio=='tourist'), ]
View(newdata)
newdata@data
# based on variable values
TagTouristCount <- length(twitter_geojson[ which(twitter_geojson$hashtag=='amsterdam' & twitter_geojson$Descriptio=='tourist'), ])
TagTouristCount
hashtags <- unique(twitter_geojson$hashtag)
for (i in hashtags){
print(i)
}
length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct")
hashtags <- unique(twitter_geojson$hashtag)
total_tourist = length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0))
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0))
hashtags <- unique(twitter_geojson$hashtag)
total_tourist = length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
for (tag in hashtags){
for (row in 1:nrow(df_twitter)){
df_twitter$hashtag[row] <- tag
count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tourist[row] <- count
df_twitter$pct[row] <- (count/total_tourist)*100
}
}
View(df_twitter)
hashtags <- unique(twitter_geojson$hashtag)
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0),nrow = nrow(hashtags))
total_tourist = length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
for (tag in hashtags){
for (row in 1:nrow(df_twitter)){
df_twitter$hashtag[row] <- tag
count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tourist[row] <- count
df_twitter$pct[row] <- (count/total_tourist)*100
}
}
View(df_twitter)
nrow(hashtags)
unique(twitter_geojson$hashtag)
nrow(unique(twitter_geojson$hashtag))
length(unique(twitter_geojson$hashtag))
hashtags <- unique(twitter_geojson$hashtag)
hashtags
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0),nrow = length(unique(twitter_geojson$hashtag)))
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0),nrow = length(unique(twitter_geojson$hashtag)))
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0),nrow = 17)))
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0),nrow = 17))
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0))))
df_twitter <- data.frame( "hashtag" = character(0), "count_tourist" = integer(0),"pct"=numeric(0))
hashtags <- unique(twitter_geojson$hashtag)
total_tourist = length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
for (tag in hashtags){
for (row in 1:nrow(df_twitter)){
df_twitter$hashtag[row] <- tag
count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tourist[row] <- count
df_twitter$pct[row] <- (count/total_tourist)*100
}
}
for (tag in hashtags){
for (row in 1:nrow(df_twitter)){
print(row)
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
}
df_twitter <- matrix(0, ncol = 3, nrow = length(unique(twitter_geojson$hashtag)))
df_twitter <- data.frame(matrix(0, ncol = 3, nrow = length(unique(twitter_geojson$hashtag))))
View(df_twitter)
View(df_twitter)
colnames(df_twitter)[1] <- "hashtag"
colnames(df_twitter)[2] <- "count_tourist"
colnames(df_twitter)[3] <- "pct"
View(df_twitter)
hashtags <- unique(twitter_geojson$hashtag)
total_tourist = length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
for (tag in hashtags){
for (row in 1:nrow(df_twitter)){
print(row)
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
}
df_twitter <- data.frame(matrix(0, ncol = 3, nrow = length(unique(twitter_geojson$hashtag))))
colnames(df_twitter)[1] <- "hashtag"
colnames(df_twitter)[2] <- "count_tourist"
colnames(df_twitter)[3] <- "pct"
hashtags <- unique(twitter_geojson$hashtag)
total_tourist = length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
for (tag in hashtags){
for (row in 1:nrow(df_twitter)){
print(row)
df_twitter$hashtag[row] <- tag
count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tourist[row] <- count
df_twitter$pct[row] <- (count/total_tourist)*100
}
}
View(df_twitter)
View(df_twitter)
length(hashtags)
for (tag in 1:length(hashtags)){
print(tag)
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
print(hashtag[tag])
for (tag in 1:length(hashtags)){
print(hashtags[tag])
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
for (tag in 1:length(hashtags)){
print(hashtags[tag,])
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
for (tag in 1:length(hashtags)){
print(hashtags[,tag])
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
hashtags[1]
hashtags[1][1]
hashtags[1]
hashtags[2]
hashtags[1]
for (tag in 1:length(hashtags)){
print(hashtags[,tag])
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
for (tag in 1:length(hashtags)){
print(hashtags[tag])
#df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
for (row in 1:length(hashtags)){
tag <- hashtags[row]
df_twitter$hashtag[row] <- tag
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
View(df_twitter)
for (row in 1:length(hashtags)){
df_twitter$hashtag[row] <- hashtags[row]
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
View(df_twitter)
df_twitter <- data.frame(matrix(0, ncol = 3, nrow = length(unique(twitter_geojson$hashtag))))
colnames(df_twitter)[1] <- "hashtag"
colnames(df_twitter)[2] <- "count_tourist"
colnames(df_twitter)[3] <- "pct"
hashtags <- unique(twitter_geojson$hashtag)
total_tourist = length(twitter_geojson[ which(twitter_geojson$Descriptio=='tourist'),])
hashtags <- unique(twitter_geojson$hashtag)
for (row in 1:length(hashtags)){
print(hashtags[row])
}
for (row in 1:length(hashtags)){
print(as.character(hashtags[row]))
}
for (row in 1:length(hashtags)){
df_twitter$hashtag[row] <- as.character(hashtags[row])
#count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
View(df_twitter)
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tourist[row] <- count
#df_twitter$pct[row] <- (count/total_tourist)*100
}
View(df_twitter)
total_tourist
length(twitter_geojson)
length(twitter_geojson[ which(twitter_geojson$Descriptio=='non-tourist'),])
View(df_twitter)
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
count <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tourist[row] <- count
df_twitter$pct[row] <- (count/total_tourist)*100
}
View(df_twitter)
sum(df_twitter$count_tourist)
total_tourist
(ggplot2)
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
theme_set(theme_bw())
View(df_twitter)
# Draw plot
ggplot(df_twitter, aes(x=hashtag, y=pct)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Percentage of tourist per hashtag",
caption="source: Twitter") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
View(df_twitter)
length(twitter_geojson[ which(twitter_geojson$hashtag=='amsterdam'),])
length(twitter_geojson[ which(twitter_geojson$hashtag=='amsterdam' & twitter_geojson$Descriptio=='tourist'), ])
df_twitter <- data.frame(matrix(0, ncol = 4, nrow = length(unique(twitter_geojson$hashtag))))
colnames(df_twitter)[1] <- "hashtag"
colnames(df_twitter)[2] <- "count_tag_tourist"
colnames(df_twitter)[3] <- "total_tag"
colnames(df_twitter)[4] <- "pct"
hashtags <- unique(twitter_geojson$hashtag)
length(twitter_geojson[ which(twitter_geojson$hashtag=='amsterdam'),])
length(twitter_geojson[ which(twitter_geojson$hashtag=='amsterdam' & twitter_geojson$Descriptio=='tourist'), ])
df_twitter <- data.frame(matrix(0, ncol = 4, nrow = length(unique(twitter_geojson$hashtag))))
colnames(df_twitter)[1] <- "hashtag"
colnames(df_twitter)[2] <- "count_tag_tourist"
colnames(df_twitter)[3] <- "total_tag"
colnames(df_twitter)[4] <- "pct"
hashtags <- unique(twitter_geojson$hashtag)
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (coun_tag_tourist/total_tag)*100
}
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
df_twitter <- data.frame(matrix(0, ncol = 4, nrow = length(unique(twitter_geojson$hashtag))))
colnames(df_twitter)[1] <- "hashtag"
colnames(df_twitter)[2] <- "count_tag_tourist"
colnames(df_twitter)[3] <- "total_tag"
colnames(df_twitter)[4] <- "pct"
hashtags <- unique(twitter_geojson$hashtag)
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
df_twitter <- data.frame(matrix(0, ncol = 4, nrow = length(unique(twitter_geojson$hashtag))))
View(df_twitter)
colnames(df_twitter)[1] <- "hashtag"
View(df_twitter)
colnames(df_twitter)[2] <- "count_tag_tourist"
colnames(df_twitter)[3] <- "total_tag"
colnames(df_twitter)[4] <- "pct"
View(df_twitter)
hashtags <- unique(twitter_geojson$hashtag)
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
View(df_twitter)
df_twitter$count_tag_tourist[1]
df_twitter$count_tag_tourist[2]
df_twitter$count_tag_tourist[3]
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tag_tourist[row] <- tag_tourist
#df_twitter$total_tag[row] <- total_tag
#df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
df_twitter$hashtag[row] <- tag
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist <- tag_tourist
#df_twitter$total_tag[row] <- total_tag
#df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
View(df_twitter)
View(df_twitter)
length(twitter_geojson[ which(twitter_geojson$hashtag=='amsterdam' & twitter_geojson$Descriptio=='tourist'), ])
length(twitter_geojson[ which(twitter_geojson$hashtag=='canals' & twitter_geojson$Descriptio=='tourist'), ])
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
}
for (row in 1:length(hashtags)){
tag <- as.character(hashtags[row])
test <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
print(test)
}
for (row in 1:length(hashtags)){
df_twitter$hashtag[row] <- as.character(hashtags[row])
tag <- as.character(hashtags[row])
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
for (row in 1:length(hashtags)){
df_twitter$hashtag[row] <- as.character(hashtags[row])
tag <- as.character(hashtags[row])
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
#df_twitter$count_tag_tourist <- tag_tourist
#df_twitter$total_tag[row] <- total_tag
#df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
View(df_twitter)
for (row in 1:length(hashtags)){
df_twitter$hashtag[row] <- as.character(hashtags[row])
tag <- as.character(hashtags[row])
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
#df_twitter$total_tag[row] <- total_tag
#df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
View(df_twitter)
for (row in 1:length(hashtags)){
df_twitter$hashtag[row] <- as.character(hashtags[row])
tag <- as.character(hashtags[row])
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (count_tag_tourist/total_tag)*100
}
for (row in 1:length(hashtags)){
df_twitter$hashtag[row] <- as.character(hashtags[row])
tag <- as.character(hashtags[row])
total_tag <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag),])
tag_tourist <- length(twitter_geojson[ which(twitter_geojson$hashtag==tag & twitter_geojson$Descriptio=='tourist'), ])
df_twitter$count_tag_tourist[row] <- tag_tourist
df_twitter$total_tag[row] <- total_tag
df_twitter$pct[row] <- (tag_tourist/total_tag)*100
}
View(df_twitter)
# Draw plot
ggplot(df_twitter, aes(x=hashtag, y=pct)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Ordered Bar Chart",
subtitle="Percentage of tourist per hashtag",
caption="source: Twitter") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
# Draw plot
ggplot(df_twitter, aes(x=hashtag, y=pct)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Percentage of tourist per hashtag",
caption="source: Twitter") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
# Draw plot
ggplot(df_twitter, aes(x=hashtag, y=pct)) +
geom_bar(stat="identity", width=.5, fill="tomato3") +
labs(title="Percentage of tourist per hashtag",
caption="source: Twitter") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
xlab('Hashtag')+ylab('%')
#load libraries
source('./source/EasyLoad.R')
packages <- c('mapdeck','rgdal','sf','geojsonsf','htmlwidgets')
EasyLoad(packages)
key = 'pk.eyJ1Ijoic2VucGFpbWFwIiwiYSI6ImNqeGVodTE2bjBuNnkzeHM4Z2p3aW9vYTkifQ.lXLo4w0noWwxHIUWSYLhmg'
infiltration_geojson <-geojson_sf('./output/neighbourhoods.geojson')
setwd("~/act/InsideAirBnB/tourism")
infiltration_geojson <-geojson_sf('./output/neighbourhoods.geojson')
View(infiltration_geojson)
infiltration_geojson$dist2hot2018 <-as.numeric(infiltration_geojson$dist2hot2018)
infiltration_geojson$Airbnb_TouristIntensity <-as.numeric(infiltration_geojson$Airbnb_TouristIntensity)
infiltration_geojson$Airbnb_TouristIntensity <- infiltration_geojson$Airbnb_TouristIntensity *1000
infiltration_geojson$tooltip <- NA
View(infiltration_geojson)
infiltration_geojson <-geojson_sf('./output/neighbourhoods.geojson')
infiltration_geojson$dist2hot2018 <-as.numeric(infiltration_geojson$dist2hot2018)
infiltration_geojson <-geojson_sf('./output/airbnbinfiltration_data/neighbourhoods_infiltration2018.geojson')
infiltration_geojson$dist2hot2018 <-as.numeric(infiltration_geojson$dist2hot2018)
infiltration_geojson$Airbnb_TouristIntensity <-as.numeric(infiltration_geojson$Airbnb_TouristIntensity)
infiltration_geojson$Airbnb_TouristIntensity <- infiltration_geojson$Airbnb_TouristIntensity *1000
infiltration_geojson$tooltip <- NA
for(i in 1:nrow(infiltration_geojson)) {
infiltration_geojson$tooltip[i] <- paste("<strong>",infiltration_geojson$Buurt[i],'</strong><br/>',
'<b>Mean distance Airbnb-Hotel 2018 (m):</b>',infiltration_geojson$dist2hot2018[i],"<br>",
'<b>Hotel bed count 2018:</b>',infiltration_geojson$Airbnb_BedsCount[i],"<br>",
'<b>Airbnb bed intensity 2018:</b>',infiltration_geojson$Airbnb_TouristIntensity[i],"<br>",
'<b>Airbnb bed count 2018:</b>',infiltration_geojson$Airbnb_BedsCount[i],"<br>",
'<b>Population 2018:</b>',infiltration_geojson$Pop2018[i])
}
ms = mapdeck_style("light")
m <- mapdeck(token = key,style = ms, pitch = 45, location = c(4.895168, 52.370216),zoom=10) %>%
add_polygon(data = infiltration_geojson,fill_colour = "dist2hot2018", na_colour = "#00ff000",elevation = 'Airbnb_TouristIntensity',legend=T,
update_view = F,auto_highlight =T,highlight_colour = "#AAFFFFFF",
tooltip = 'tooltip',palette = 'ylorrd',legend_options = list(title='Mean distance Airbnb-Hotel 2018 (m)')
)
saveWidget(m, file="./infiltration_mapdeck.html",selfcontained = T)
